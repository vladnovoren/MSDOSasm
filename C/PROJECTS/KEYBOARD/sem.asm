.model tiny
.code

org 100h

start:  ; mov ax, 0b800h
        ; mov es, ax
        ; mov di, 2 * 80 + 2 * 40
        ; mov ah, 4eh
        ;
        ; Next:   in al, 60h
        ; mov es:[di], ax
      	; cmp al, 1
        ; jne Next


        xor bx, bx ; адресуемся к таблице прерываний
        mov es, bx
        mov bx, 9 * 4
        mov ax, es:[bx]


        mov old09ofs, ax ; сохранили в переменной old09ofs смещение старой функции обработки прерывания 09h
        mov ax, es:[bx + 2] ; 
        mov old09_seg, ax ; сохранили в переменной old09_seg сегмент в котором лежит старая функция обработки прерывания 09h

        cli ; запрещаем внешние прерывания
        mov es:[bx], offset New09 ; кладем в регистр смещение нашей функции обработки прерывания
        mov ax, cs ;
        mov es:[bx + 2], ax ; кладем сегмент кода в место для хранения сегмента в котором лежит функция обработки прерывания прерывания
        sti ; снова разрешаем внение прерывания


        mov ax, 3100h ; код того чтобы остаться резидентом
        mov dx, offset EndProgram ; помещаем в dx смещение конца программы 
        shr dx, 4 ; делим на 4, тк размер исчисляется в параграфах
        inc dx ; увеличиваем dx на всякий случай, чтобы выделенной памяти точно хватило для программы
        int 21h ; вызываем 21h прерывание


New09 proc ; метка 
        push es di ax ; сохраняем регистры в стек
        mov di, 0b800h ; кладем в di видеопамяти
        mov es, di ; помещаем di в es
        mov di, 2 * (80 + 40) ; помещаем желаемое смещение в di
        mov ah, 4eh ; в ah - жёлтый на красном фоне
        in al, 60h ; берем скан-код последней нажатой клавиши
        mov es:[di], ax ; кладем скан-код в видеопамять

        cmp al, 02h ; сравниваем скан-код со скан-кодом единички
        jne EOI ; если не равны, то не выводим его дополнительно

        mov es:[di + 4], ax ; кладем снова этот символ в видеопамять

        in al, 61h ; загружаем в al содержимое порта 61h
        mov ah, al ; сохраняем al в ah

        or al, 80h ; устанавливаем старший бит порта 61h в единичку, чтобы клавиатура была заблокирована [80h = 1000 0000 b]
        out 61h, al ; 
        mov al, ah ; возвращаем в al его исходное значение
        out 61h, al ; возвращаем исходное содержимое 61h

        mov al, 20h ;
        out 20h, al ; выводим в порт 20h байт 20h чтобы чтобы очистить регистр обслуживания прерываний

        pop ax di es ; восстанавливаем значения регистров
        iret ; возвращаемся из процедуры обработки прерывания

EOI:    pop ax di es

        db 0eah ; код операции jmp far
old09ofs  dw 0
old09_seg dw 0
;       cmp al, 01h 

        endp

EndProgram:
        end Start
